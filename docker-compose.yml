services:
  jangcar_nginx:
    container_name: jangcar_nginx
    image: nginx:stable-alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/templates:/etc/nginx/templates
      - ./.cert/cert.pem:/etc/nginx/.cert/cert.pem
      - ./.cert/key.pem:/etc/nginx/.cert/key.pem
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - jangcar_backend
      - jangcar_frontend
      - jangcar_minio
    networks:
      - jangcar_network

  jangcar_frontend:
    container_name: jangcar_frontend
    build:
      context: frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/usr/src/frontend
    env_file:
      - .env
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    stdin_open: true
    tty: true
    depends_on:
      - jangcar_backend
      - jangcar_minio
    networks:
      - jangcar_network
  
  jangcar_backend:
    container_name: jangcar_backend
    build:
      context: backend
      dockerfile: Dockerfile
      target: development
    volumes:
      - ./backend:/usr/src/backend
    command: npm run start:dev
    env_file:
      - .env
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    depends_on:
      - jangcar_postgres
      - jangcar_redis
      - jangcar_minio
    networks:
      - jangcar_network

  jangcar_postgres:
    container_name: jangcar_postgres
    image: postgres:latest
    restart: always
    env_file:
      - .env
    ports:
      - "${POSTGRES_EXTERNAL_PORT}:${POSTGRES_PORT}"
    networks:
      - jangcar_network

  jangcar_redis:
    container_name: jangcar_redis
    image: "redis:alpine"
    env_file:
      - .env
    ports:
      - "${REDIS_EXTERNAL_PORT}:${REDIS_PORT}"
    networks:
      - jangcar_network

  jangcar_minio:
    container_name: jangcar_minio
    image: bitnami/minio
    env_file:
      - .env
    ports:
      - "${MINIO_PORT}:${MINIO_PORT}"
      - "9001:9001"
    networks:
      - jangcar_network

networks:
  jangcar_network:
    driver: bridge